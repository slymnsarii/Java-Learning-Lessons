1. Eger yazdigimiz kod birden fazla exception olusturma ihtimali tasiyorsa, bu durumda birden
fazla try catch kullanabiliriz.

2. Exception’in kaynagi kodun farkli satirlari ise, o satirlari ayri ayri handle edebiliriz

3. Ama ayni kod blogu birden fazla exception ihtimali iceriyorsa, ic ice try catch bloklari, bir try
birden fazla catch olusturabiliriz, muhtemel exception’lari kapsayan tek bir exception varsa
sadece o yazilabilir.

4. Olusacak exception’lar birbiri ile parent-child iliskisine sahipse child uste, parent altta
yazilmalidir. Bu bir tercih degil mecburiyettir.

5. Eger parent yukarida child asagida olursa, Java CTE verir, cunku asagidaki child exception,
ulasilamaz konumda olacaktir.

6. Eger compile time exception’i handle etmek degil de sadece Java’daki kirmizi cizgileri kaldirmak
isterseniz method signature’ina throws keyword ile olusabilecek exception class isimlerini
yazariz.

7. Eger kodun herhangi herhangi bir satirinda, bir exception throw etmek istersek
throw new ExceptionIsmi kullanabiliriz.


*Method signature'ina ekleyecegimiz yani method'umuzu declare edcegimiz satir throws keywordudur.
*Bir method'un icerisinde Exception firlatiyorsa throw new eklerim
public void ohNo() throws Exception{
throw new Exception();
}

**Exception konrtol altina alinabilir ama error alinamaz
